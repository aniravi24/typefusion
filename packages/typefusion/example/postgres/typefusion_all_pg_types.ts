import { pgType, TypefusionDbScript } from "../../src/index.js";

const allPgTypes = {
  bigint: pgType.bigint().notNull(),
  bigserial: pgType.bigserial().notNull(),
  boolean: pgType.boolean().notNull(),
  box: pgType.box().notNull(),
  bytea: pgType.bytea().notNull(),
  char: pgType.char(10).notNull(),
  cidr: pgType.cidr().notNull(),
  circle: pgType.circle().notNull(),
  date: pgType.date().notNull(),
  dateTime: pgType.dateTime().notNull(),
  decimal: pgType.decimal().notNull(),
  doublePrecision: pgType.doublePrecision().notNull(),
  inet: pgType.inet().notNull(),
  integer: pgType.integer().notNull(),
  interval: pgType.interval().notNull(),
  json: pgType.json().notNull(),
  jsonb: pgType.jsonb().notNull(),
  line: pgType.line().notNull(),
  lseg: pgType.lseg().notNull(),
  macaddr: pgType.macaddr().notNull(),
  money: pgType.money().notNull(),
  numeric: pgType.numeric().notNull(),
  point: pgType.point().notNull(),
  polygon: pgType.polygon().notNull(),
  real: pgType.real().notNull(),
  serial: pgType.serial().notNull(),
  smallint: pgType.smallint().notNull(),
  smallserial: pgType.smallserial().notNull(),
  text: pgType.text().notNull(),
  time: pgType.time().notNull(),
  tsquery: pgType.tsquery().notNull(),
  tsvector: pgType.tsvector().notNull(),
  uuid: pgType.uuid().notNull(),
  varchar: pgType.varchar(50).notNull(),
  xml: pgType.xml().notNull(),
};

export default {
  name: "typefusion_all_pg_types",
  resultDatabase: "postgresql",
  run: async () => {
    console.log("TYPEFUSION ALL PG TYPES IS RUN");
    return {
      data: [
        {
          bigint: BigInt("9007199254740991"),
          bigserial: BigInt("9223372036854775807"),
          boolean: true,
          box: "((1,1),(2,2))",
          bytea: new Uint8Array([0x12, 0x34, 0x56, 0x78]),
          char: "Fixed     ",
          cidr: "192.168.0.0/24",
          circle: "<(0,0),1>",
          date: new Date("2023-05-17"),
          dateTime: new Date("2023-05-17T12:34:56"),
          decimal: 678.9,
          doublePrecision: 3.141592653589793,
          inet: "192.168.0.1",
          integer: 42,
          interval: "1 year 2 months 3 days 4 hours 5 minutes 6 seconds",
          json: { key: "value" },
          jsonb: { anotherKey: "anotherValue" },
          line: "{1,-1,0}",
          lseg: "((1,1),(2,2))",
          macaddr: "08:00:2b:01:02:03",
          money: 1234.56,
          numeric: 123.45,
          point: "(1,2)",
          polygon: "((0,0),(1,1),(2,0))",
          real: 3.14,
          serial: 123456,
          smallint: 32767,
          smallserial: 12345,
          text: "Sample text",
          time: "12:34:56",
          tsquery: "'sample' & 'query'",
          tsvector: "'a':1 'sample':2 'text':3",
          uuid: "123e4567-e89b-12d3-a456-426614174000",
          varchar: "Variable length text",
          xml: "<root><element>content</element></root>",
        },
      ],
    };
  },
  schema: allPgTypes,
} satisfies TypefusionDbScript<typeof allPgTypes>;
